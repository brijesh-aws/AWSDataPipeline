AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:

  ProjectName:
    Description: Name of Project/Application. (In lower case)
    Type: String
    Default: demo

  EnvironmentType:
    Description: Type of Environment (In lower case)
    Type: String
    Default: dev

  NotifyEmail:
    Description: Email Address
    Type: String
    Default: bprajapati@deloitte.com 

  #SourceBucket:
  #  Description: Email Address
  #  Type: String
  #  Default: awseventbucket 

  SubnetId1:
    Description: VPC Subnet 1
    Type: String
    Default: subnet-fc8a30a3

  SubnetId2:
    Description: VPC Subnet 2
    Type: String
    Default: subnet-f089c0bd

  SecurityGroup1:
    Description: Security Group 1
    Type: String
    Default: sg-8763d2b5

  JobQueueName:
    Description: Name of AWS Batch Job Queue
    Type: String
    Default: AnalyticsJobQueue

  ComputeEnvironmentName:
    Description: Name of AWS Batch Compute Environment
    Type: String
    Default: AnalyticsComputing

Resources:

  AthenaQueryEditorBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: TRUE
        BlockPublicAcls: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType

  SourceBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: TRUE
        BlockPublicAcls: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref EnvironmentType

  StepFunctionLogETLEventsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: AnalyticsLogETLEventsQueue.fifo
      VisibilityTimeout: 60
      MessageRetentionPeriod: 43200 # 12 hours
      KmsMasterKeyId: alias/aws/sqs
      FifoQueue: true
      ContentBasedDeduplication: true

  StepFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  AnalyticsSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: GlueAnalytics

  AnalyticsSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref AnalyticsSNSTopic
      Protocol: email
      Endpoint: !Ref NotifyEmail

  StepFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                  - "logs:*"
                  - "sqs:*"
                  - "s3:*"
                  - "sns:*" 
                Resource: "*"

  AnalyticsGlueServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess 

  AnalyticsBatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
        - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EcsInstanceRole

  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2008-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite


  AnalyticsJobEventsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "ANALYTICS_JOB_EVENTS"
      SSESpecification:
        KMSMasterKeyId: alias/aws/dynamodb
        SSEEnabled: 'true'
        SSEType: KMS
      AttributeDefinitions:
        - AttributeName: job_name
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
        - AttributeName: event_name
          AttributeType: S
      KeySchema:
        - AttributeName: job_name
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: JOB-EVENT-TYPE-index
          KeySchema:
            - AttributeName: job_name
              KeyType: HASH
            - AttributeName: event_name
              KeyType: RANGE
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
          Projection:
            ProjectionType: ALL

  AnalyticsJobEventsCurrentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: "ANALYTICS_JOB_EVENTS_CURRENT"
      SSESpecification:
        KMSMasterKeyId: alias/aws/dynamodb
        SSEEnabled: 'true'
        SSEType: KMS
      AttributeDefinitions:
        - AttributeName: job_name
          AttributeType: S
        - AttributeName: event_name
          AttributeType: S
      KeySchema:
        - AttributeName: job_name
          KeyType: HASH
        - AttributeName: event_name
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  LogETLEventsLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 60
      MemorySize: 2048
      CodeUri: ../lambda/logETLEvents
      FunctionName: logETLEvents
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          tableName: !Ref AnalyticsJobEventsCurrentTable
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
        - AWSStepFunctionsFullAccess
        - AmazonSQSFullAccess
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt StepFunctionLogETLEventsQueue.Arn
            BatchSize: 1


  HandleETLEventsLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/handleETLEvents
      FunctionName: handleETLEvents
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          tableName: !Ref AnalyticsJobEventsTable
          snsTopic: !Ref AnalyticsSNSTopic
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonDynamoDBFullAccess
        - AWSStepFunctionsFullAccess
        - AmazonSQSFullAccess
        - AmazonSNSFullAccess
      Events:
        DynamoDBEvent:
          Type: DynamoDB
          Properties:
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
            Stream: !GetAtt AnalyticsJobEventsCurrentTable.StreamArn


  InvokeAnalyticsCrawlerLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/invokeGlueCrawler
      FunctionName: invokeGlueCrawler
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          crawlerName: default-crawler
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
        - AWSGlueConsoleFullAccess
        - AWSStepFunctionsFullAccess

  CheckStatusOfAnalyticsCrawlerLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/checkStatusOfCrawler
      FunctionName: checkStatusOfCrawler
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          crawlerName: default-crawler
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
        - AWSGlueConsoleFullAccess
        - AWSStepFunctionsFullAccess

  InvokeETLJobLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/invokeGlueJob
      FunctionName: invokeGlueJob
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          glueETLJob: default-etl-job
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
        - AWSGlueConsoleFullAccess
        - AWSStepFunctionsFullAccess

  InvokeStepFunctionLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/invokeStepFunction
      FunctionName: invokeStepFunction
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          stateMachine: 'test'
          bucketName: 'test'
          key: 'test'
#          stateMachine: !Ref NameOfStepFunction
#          bucketName: !Ref SourceS3bucketRaw
#          key: csv/data_collection/raw-data.csv
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AWSStepFunctionsFullAccess

  CsvToJsonLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/csvToJson
      FunctionName: csvToJson
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          sourceBucket: !Ref SourceBucket
          sourcePath: csv
          destinationBucket: !Ref SourceBucket
          destinationPath: json
          archivePath: archive
          fileFilter: .csv
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AWSStepFunctionsFullAccess

  CheckStatusOfETLJobLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 600
      MemorySize: 2048
      CodeUri: ../lambda/checkStatusOfETLJob
      FunctionName: checkStatusOfETLJob
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          jobName: data_us_collection_raw
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
        - AWSGlueConsoleFullAccess
        - AWSStepFunctionsFullAccess


  InvokeAWSBatchLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      MemorySize: 2048
      CodeUri: ../lambda/invokeAWSBatch
      Handler: index.lambda_handler
      FunctionName: invokeBatch
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          batchJobName: analytics-cosmosdb
          batchJobDefination: analytics-cosmosdb
          batchJobQueue: analytics-job-queue
          batchJobMemory: 32000
          batchJobCPUs: 8
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AWSBatchFullAccess
        - AWSStepFunctionsFullAccess

  CheckStatusOfAWSBatchLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      MemorySize: 2048
      CodeUri: ../lambda/checkStatusOfAWSBatch
      Handler: index.lambda_handler
      FunctionName: checkStatusOfBatch
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          batchJobQueue: analytics-job-queue
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AWSBatchFullAccess
        - AWSStepFunctionsFullAccess

  ExcelToJsonLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 300
      MemorySize: 3008
      CodeUri: ../lambda/excelToJson
      FunctionName: excelToJson
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          archiveBucket: dcmigrationarchive
          destinationBucket: dcmigrationdatacuration
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AWSStepFunctionsFullAccess

  MoveS3FilesLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 300
      MemorySize: 3008
      CodeUri: ../lambda/moveS3Files
      FunctionName: moveS3Files
      Handler: index.lambda_handler
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          moveFilesSrcBucket: datacuration
          moveFilesDestBucket: archive
          moveFilesPath: json
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AWSStepFunctionsFullAccess

  IteratorLF:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 30
      MemorySize: 1024
      CodeUri: ../lambda/iterator
      Handler: index.lambda_handler
      FunctionName: iterator
      Runtime: python3.7
      AutoPublishAlias: prod
      Environment:
        Variables:
          keyName: order
      Policies:
        - AWSLambdaExecute
        - CloudWatchLogsFullAccess
        - AmazonS3FullAccess
        - AmazonAthenaFullAccess
        - AWSGlueConsoleFullAccess
        - AWSStepFunctionsFullAccess

Outputs:

  IteratorLF:
    Value: !GetAtt IteratorLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-IteratorLF"

  CheckStatusOfETLJobLF:
    Value: !GetAtt CheckStatusOfETLJobLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-CheckStatusOfETLJobLF"

  CsvToJsonLF:
    Value: !GetAtt CsvToJsonLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-CsvToJsonLF"

  InvokeStepFunctionLF:
    Value: !GetAtt InvokeStepFunctionLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-InvokeStepFunctionLF"

  InvokeETLJobLF:
    Value: !GetAtt InvokeETLJobLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-InvokeETLJobLF"

  CheckStatusOfAnalyticsCrawlerLF:
    Value: !GetAtt CheckStatusOfAnalyticsCrawlerLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-CheckStatusOfAnalyticsCrawlerLF"

  InvokeAnalyticsCrawlerLF:
    Value: !GetAtt InvokeAnalyticsCrawlerLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-InvokeAnalyticsCrawlerLF"

  HandleETLEventsLF:
    Value: !GetAtt HandleETLEventsLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-HandleETLEventsLF"

  LogETLEventsLF:
    Value: !GetAtt LogETLEventsLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-LogETLEventsLF"

  AnalyticsJobEventsCurrentTable:
    Value: !Ref AnalyticsJobEventsCurrentTable
    Export:
      Name: !Sub "${EnvironmentType}-AnalyticsJobEventsCurrentTable"

  AnalyticsJobEventsTable:
    Value: !Ref AnalyticsJobEventsTable
    Export:
      Name: !Sub "${EnvironmentType}-AnalyticsJobEventsTable"

  StepFunctionExecutionRole:
    Value: !GetAtt StepFunctionExecutionRole.Arn
    Export:
      Name: !Sub "${EnvironmentType}-StepFunctionExecutionRole"

  AnalyticsGlueServiceRole:
    Value: !GetAtt AnalyticsGlueServiceRole.Arn
    Export:
      Name: !Sub "${EnvironmentType}-AnalyticsGlueServiceRole"

  AnalyticsBatchServiceRole:
    Value: !GetAtt AnalyticsBatchServiceRole.Arn
    Export:
      Name: !Sub "${EnvironmentType}-AnalyticsBatchServiceRole"

  EcsInstanceRole:
    Value: !GetAtt EcsInstanceRole.Arn
    Export:
      Name: !Sub "${EnvironmentType}-EcsInstanceRole"

  MoveS3FilesLF:
    Value: !GetAtt MoveS3FilesLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-MoveS3FilesLF"

  InvokeAWSBatchLF:
    Value: !GetAtt InvokeAWSBatchLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-InvokeAWSBatchLF"

  ExcelToJsonLF:
    Value: !GetAtt ExcelToJsonLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-ExcelToJsonLF"

  CheckStatusOfAWSBatchLF:
    Value: !GetAtt CheckStatusOfAWSBatchLF.Arn
    Export:
      Name: !Sub "${EnvironmentType}-CheckStatusOfAWSBatchLF"
 
  StepFunctionLogGroup:
    Value: !GetAtt StepFunctionLogGroup.Arn
    Export:
      Name: !Sub "${EnvironmentType}-StepFunctionLogGroup"

  StepFunctionLogETLEventsQueue:
    Value: !Ref StepFunctionLogETLEventsQueue
    Export:
      Name: !Sub "${EnvironmentType}-StepFunctionLogETLEventsQueue"

  SourceBucket:
    Value: !Ref SourceBucket
    Export:
      Name: !Sub "${ProjectName}-${EnvironmentType}-SourceBucket"

  AnalyticsSNSTopicEx:
    Value: !Ref AnalyticsSNSTopic
    Export:
      Name: !Sub "${EnvironmentType}-AnalyticsSNSTopic"